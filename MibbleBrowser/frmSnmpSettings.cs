// <copyright file="frmSnmpSettings.cs" company="None">
//    <para>
//    This work is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published
//    by the Free Software Foundation; either version 2 of the License,
//    or (at your option) any later version.</para>
//    <para>
//    This work is distributed in the hope that it will be useful, but
//    WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
//    General Public License for more details.</para>
//    <para>
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
//    USA</para>
//    Based on code auto-generated by VS 2015.
//    Copyright (c) 2016 Jeremy Gibbons. All rights reserved
// </copyright>

using System.Linq;
using System.Net;

namespace MibbleBrowser
{
    using SnmpLextmWrapper.Domain;
    using System.Windows.Forms;

    /// <summary>
    /// A partial definition of the <c>FrmSnmpSettings</c> form
    /// </summary>
    public partial class FrmSnmpSettings : Form
    {
        internal ISnmpParameters snmpParameters;

        /// <summary>
        /// Initializes a new instance of the <see cref="FrmSnmpSettings"/> class
        /// </summary>
        public FrmSnmpSettings()
        {
            this.InitializeComponent();
            this.comboBox1.SelectedIndex = 1;
        }

        public FrmSnmpSettings(ISnmpParameters snmpParameters)
        {
            this.InitializeComponent();
            textBox1.Text = snmpParameters.IP.ToString();
            if (snmpParameters.GetType() == typeof(SnmpV3Parameters))
            {
                comboBox1.SelectedIndex = 2;
            }
            else
            {
                comboBox1.SelectedIndex = 1;
                textBox2.Text = ((SnmpV2Parameters)snmpParameters).SnmpCommunity.ToString();
            }
        }

        private void comboBox1_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            if (comboBox1.Text.Contains("3"))
            {
                //snmpParameters = new SnmpV3Parameters();

            }
        }

        private void button1_Click(object sender, System.EventArgs e)
        {
            int port = 0;
            IPAddress ipAddress;
            var ip = textBox1.Text;
            if (ip.Contains(":"))
            {
                var endpoint = ip.Split(':');
                ip = endpoint[0];
                port = int.Parse(endpoint.LastOrDefault(x=>x != ""));
            }
            if (!IPAddress.TryParse(ip, out ipAddress))
            {
                ipAddress = Dns.GetHostEntry(ip).AddressList.First(addr =>
                        addr.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork);
            }
            if (comboBox1.Text.Contains("3"))
            {
                //snmpParameters = new SnmpV3Parameters();

            }
            else
            {

                snmpParameters = new SnmpV2Parameters(ipAddress, port, textBox2.Text ?? textBox3.Text);
                if (comboBox1.Text.Contains("1"))
                {
                    snmpParameters.SetVersion("1");
                }
            }
            this.Close();
        }

        private void button2_Click(object sender, System.EventArgs e)
        {
            this.Close();
        }
    }
}
